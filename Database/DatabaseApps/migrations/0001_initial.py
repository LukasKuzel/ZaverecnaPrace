# Generated by Django 4.1.2 on 2022-12-24 18:38

import DatabaseApps.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('surname', models.CharField(max_length=250, verbose_name='Surname')),
                ('birthdate', models.CharField(blank=True, max_length=100, null=True, verbose_name='birthdate')),
                ('deathdate', models.CharField(blank=True, max_length=100, null=True, verbose_name='death date')),
                ('photo', models.ImageField(null=True, upload_to=DatabaseApps.models.poster_author_path)),
                ('bio', models.TextField(null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Title')),
                ('rate', models.FloatField(default=0, help_text='Enter between 1 - 5', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('photo', models.ImageField(null=True, upload_to=DatabaseApps.models.poster_book_path)),
                ('plot', models.TextField(null=True)),
                ('author', models.ManyToManyField(to='DatabaseApps.author')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=250, verbose_name='State')),
                ('city', models.CharField(blank=True, max_length=250, verbose_name='City')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz_answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=250, verbose_name='Answer')),
                ('verify', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='0-false or 1-true')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('rate', models.FloatField(blank=True, default=0, help_text='Enter between 1 - 5', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('status', models.BooleanField(default=True)),
                ('ip', models.CharField(max_length=40, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='DatabaseApps.book')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz_question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=250, verbose_name='Question')),
                ('delete2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delete_answers', to='DatabaseApps.quiz_answer')),
                ('quizAnswer', models.ManyToManyField(to='DatabaseApps.quiz_answer')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delete1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delete_question', to='DatabaseApps.quiz_question')),
                ('quizQuestion', models.ManyToManyField(to='DatabaseApps.quiz_question')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='genre',
            field=models.ManyToManyField(to='DatabaseApps.genre'),
        ),
        migrations.AddField(
            model_name='author',
            name='nation',
            field=models.ManyToManyField(to='DatabaseApps.nation'),
        ),
    ]
